{"version":3,"sources":["webpack:///./src/components/atoms/burger.js","webpack:///./src/components/atoms/mobilenav.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/pages/contribute.js","webpack:///./src/images/rmf_logo.svg","webpack:///./node_modules/core-js/modules/es6.string.link.js","webpack:///./src/components/seo.js"],"names":["Burger","open","setOpen","onClick","role","tabIndex","className","MobileNavigation","links","docs","map","item","i","key","to","link","activeClassName","partiallyActive","title","id","items","child","Header","siteTitle","useState","data","src","logo","alt","allHeaderNavYaml","nodes","allSidebarNavYaml","defaultProps","Layout","children","site","siteMetadata","IndexPage","module","exports","createHTML","url","this","SEO","description","lang","meta","metaDescription","htmlAttributes","titleTemplate","name","content","property","author","concat"],"mappings":"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","file":"component---src-pages-contribute-js-4656a93f336a25346399.js","sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events */\n\nimport React from \"react\"\nimport { bool, func } from \"prop-types\"\n\nconst Burger = ({ open, setOpen }) => {\n  return (\n    <div\n      open={open}\n      onClick={() => setOpen(!open)}\n      role=\"link\"\n      tabIndex=\"0\"\n      className={\n        open ? \"header__sidebarButton is-open\" : \"header__sidebarButton\"\n      }\n    >\n      <i className=\"header__sidebarButton_bar\" />\n      <i className=\"header__sidebarButton_bar\" />\n    </div>\n  )\n}\n\nBurger.propTypes = {\n  open: bool.isRequired,\n  setOpen: func.isRequired,\n}\n\nexport default Burger\n","import { Link } from \"gatsby\"\nimport React from \"react\"\nimport { bool } from \"prop-types\"\n\nconst MobileNavigation = ({ open, links, docs }) => {\n  return (\n    <nav\n      open={open}\n      className={open ? \"header__mobileNav is-open\" : \"header__mobileNav\"}\n    >\n      {links.map((item, i) => (\n        <li className=\"header__mobileNav_item\" key={i}>\n          <Link\n            to={item.link}\n            activeClassName=\"is-active\"\n            partiallyActive={true}\n          >\n            {item.title}\n          </Link>\n\n          {i === 0 ? (\n            <ul className=\"header__mobileNav_item_sub\">\n              {docs.map((item, i) => (\n                <div className=\"header__mobileNav_item_sub_group\" key={item.id}>\n                  <span className=\"header__mobileNav_item_sub_group_title\">\n                    {item.title}\n                  </span>\n                  <ul className=\"header__mobileNav_item_sub_group_sub\">\n                    {item.items.map((child, i) => (\n                      <li\n                        className=\"header__mobileNav_item_sub_group_sub_item\"\n                        key={i}\n                      >\n                        <Link to={child.link} activeClassName=\"is-active\">\n                          {child.title}\n                        </Link>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              ))}\n            </ul>\n          ) : null}\n        </li>\n      ))}\n    </nav>\n  )\n}\n\nMobileNavigation.propTypes = {\n  open: bool.isRequired,\n}\n\nexport default MobileNavigation\n","import { Link } from \"gatsby\"\nimport React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport Burger from \"./atoms/burger\"\nimport MobileNavigation from \"./atoms/mobilenav\"\n\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport logo from \"../images/rmf_logo.svg\"\n\nconst Header = ({ siteTitle }) => {\n  const [open, setOpen] = useState(false)\n\n  const data = useStaticQuery(graphql`\n    query headerNav {\n      allHeaderNavYaml {\n        nodes {\n          id\n          items {\n            link\n            title\n          }\n        }\n      }\n      allSidebarNavYaml {\n        nodes {\n          id\n          title\n          items {\n            title\n            link\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <header className=\"header\">\n        <div className=\"header__wrapper\">\n          <div className=\"header__logo\">\n            <Link to=\"/\">\n              <img src={logo} alt={siteTitle} />\n            </Link>\n          </div>\n\n          <div className=\"header__hamburger\">\n            <Burger open={open} setOpen={setOpen} />\n          </div>\n\n          <nav className=\"header__nav\">\n            {data.allHeaderNavYaml.nodes[0].items.map((item, i) => (\n              <li className=\"header__nav_item\" key={i}>\n                <Link\n                  to={item.link}\n                  activeClassName=\"is-active\"\n                  partiallyActive={true}\n                >\n                  {item.title}\n                </Link>\n              </li>\n            ))}\n          </nav>\n\n          <div className=\"header__contribute\">\n            <Link\n              to=\"/contribute\"\n              activeClassName=\"is-active\"\n              className=\"btn-small btn-secondary_purple\"\n            >\n              Contribuisci\n            </Link>\n          </div>\n        </div>\n      </header>\n      <MobileNavigation\n        open={open}\n        setOpen={setOpen}\n        links={data.allHeaderNavYaml.nodes[0].items}\n        docs={data.allSidebarNavYaml.nodes}\n      />\n    </>\n  )\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Header from \"./header\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <main className=\"content\">{children}</main>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\n// import { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\n// import Image from \"../components/image\"\nimport SEO from \"../components/seo\"\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" />\n  </Layout>\n)\n\nexport default IndexPage\n","module.exports = __webpack_public_path__ + \"static/rmf_logo-dff938a541f4915ee2654e1809833883.svg\";","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <HelmetProvider>\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s — ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n    </HelmetProvider>\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}